/* Exercise 5:
 * Create a new program that will create a vector of random size, 
 * filled with random numbers between 1 and 100.
 */

#include <iostream>
#include <vector>
#include <algorithm>
#include <random>

void generate_random_vector(std::vector<int>& v, const std::size_t& size)
{
    std::random_device rd;  
    std::mt19937 gen(rd()); 
    std::uniform_int_distribution<> distrib(1, 100);
 
    // Use distrib to transform the random unsigned int
    // generated by gen into an int in [1, 100]

    for (int n {0}; n != int(size); ++n)
    {
         v.push_back(int(distrib(gen)));
    }
}

size_t generate_random_value()
{
    // seed source for random number engine
    std::random_device rd; 
    // marsenne_twister engine seeded with rd()
    std::mt19937 gen(rd()); 
    // prduce random integer values
    std::uniform_int_distribution<> distrib(1, 100);

    return size_t(distrib(gen));

}

void print(const std::vector<int>& v)
{
    for(auto element : v)
    {
        std::cout << element << ' ';
    }
    std::cout << '\n';
}

int main()
{
    std::vector<int> vect {};

    generate_random_vector(vect, generate_random_value());
    print(vect);
    return 0;

}